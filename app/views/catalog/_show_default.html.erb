<%= render "mirador/show", document: document %>

<% doc_presenter = show_presenter(document) %>
<%# default partial to display solr document fields in catalog show view -%>
<dl class="dl-horizontal dl-invert">
  <% document_show_fields(document).each do |field_name, field| %>
    <% if should_render_show_field? document, field %>
      <dt class="blacklight-<%= field_name.parameterize %>">
        <%= render_document_show_field_label document, field: field_name %>
      </dt>
      <% if field_name=='id' %>
        <dd class="blacklight-<%= field_name.parameterize %>"><%= link_to doc_presenter.field_value(field_name), doc_presenter.field_value(field_name), target: "_blank" %></dd>
      <% elsif field_name == 'pcdm_members' %>
        <dd class="blacklight-<%= field_name.parameterize %>">
          <% unique_component_types(doc_presenter.field_value(field_name)).each do |component| %>
            <% subset = doc_presenter.field_value(field_name).select{|member| member['component'] == component} %>
            <% unless component.nil? %>
              <strong>
                <%= component.pluralize subset.size %>
                <span class="badge"><%= subset.size %></span>
              </strong>
            <% end %>
            <ul class="multivalued-field-value">
              <% sorted_subset = subset.sort{|a,b| a['display_title'] <=> b['display_title']}
                 # Split the sorted subset into "inital" and "more" lists,
                 # to limit the number of items that are initally displayed.
                 #
                 # Hard-coding the limit, because setting up a configuration
                 # setting for a single instance seems excessive
                 item_limit = 8
                 initial_list = sorted_subset.take(item_limit)
                 more_list = sorted_subset.drop(item_limit)
              %>
              <% initial_list.each do |v| %>
                <li><%= link_to v['display_title'], solr_document_path(v['id']) %></li>
              <% end %>
              <% unless more_list.empty? %>
                <details>
                  <summary style="display: list-item">More</summary>
                  <% more_list.each do |v| %>
                    <li><%= link_to v['display_title'], solr_document_path(v['id']) %></li>
                  <% end %>
                </details>
              <% end %>
         </ul>
          <% end %>
        </dd>
      <% elsif %w[pcdm_files pcdm_related_objects pcdm_related_object_of pcdm_member_of pcdm_file_of pcdm_collection annotation_source].include?(field_name) %>
        <dd class="blacklight-<%= field_name.parameterize %>">
          <ul class="multivalued-field-value">
            <% doc_presenter.field_value(field_name).each do |v| %>
              <li><%= link_to((v['display_title'].present? ? v['display_title'] : v['id']), solr_document_path(v['id'])) %></li>
            <% end %>
          </ul>
        </dd>
      <% elsif %w[presentation_set_label rdf_type].include?(field_name) %>
        <dd class="blacklight-<%= field_name.parameterize %>">
          <ul class="multivalued-field-value">
            <% doc_presenter.field_value(field_name).each do |v| %>
              <li><%= v %></li>
            <% end %>
          </ul>
        </dd>
      <% else %>
        <dd class="blacklight-<%= field_name.parameterize %>"><%= doc_presenter.field_value field_name %></dd>
      <% end %>
    <% end -%>
  <% end -%>
</dl>
